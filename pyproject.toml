[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-ml-training-supnum"
version = "0.1.0"
description = "Formation IA & Machine Learning - SupNum Nouakchott par Vela Learning"
authors = [
    {name = "Mohamed Beydia", email = "mohamed.beydia@vela-learning.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
keywords = ["machine learning", "artificial intelligence", "education", "training"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "jupyter>=1.0.0",
    "jupyterlab>=3.0.0",
    "plotly>=5.0.0",
    "streamlit>=1.10.0",
    "fastapi>=0.68.0",
    "torch>=1.9.0",
    "transformers>=4.10.0",
    "mlflow>=1.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "black>=21.7.0",
    "flake8>=3.9.0",
    "isort>=5.9.0",
    "pre-commit>=2.15.0",
]
deep-learning = [
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "tensorflow>=2.6.0",
    "keras>=2.6.0",
]
nlp = [
    "transformers>=4.10.0",
    "tokenizers>=0.10.0",
    "nltk>=3.6.0",
    "spacy>=3.4.0",
    "gensim>=4.1.0",
]
vision = [
    "opencv-python>=4.5.0",
    "pillow>=8.3.0",
]
api = [
    "openai>=0.27.0",
    "huggingface-hub>=0.8.0",
]

[project.urls]
Homepage = "https://github.com/vela-learning/ai-ml-training-supnum"
Repository = "https://github.com/vela-learning/ai-ml-training-supnum.git"
Issues = "https://github.com/vela-learning/ai-ml-training-supnum/issues"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
